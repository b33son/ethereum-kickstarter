{"version":3,"sources":["webpack:///./pages/campaigns/detail.js?5b2f"],"names":["CampaignDetail","props","minContribution","campaignBalance","spendRequestsCount","approversCount","managerAddress","console","log","campaignAddress","items","header","meta","description","style","overflowWrap","web3","utils","fromWei","renderCards","address","query","campaign","Campaign","methods","getSummary","call","summary"],"mappings":"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","file":"3.4d5c6b43f5b2f6b085fc.hot-update.js","sourcesContent":["/*\n * File: /Users/michaelbeeson/Documents/VSCode/ethereum/kickstarter/pages/campaigns/detail.js\n */\n\nimport React, { Component } from 'react';\nimport Layout from '../../components/Layout';\nimport Campaign from '../../ethereum/campaign';\nimport { Card, Grid, Button } from 'semantic-ui-react';\nimport web3 from '../../ethereum/web3';\nimport ContributeForm from '../../components/ContributeForm'\nimport { Link } from '../../routes';\n\nexport default class CampaignDetail extends Component {\n\n  static async getInitialProps(props) {\n    const address = props.query.address;\n    const campaign = Campaign(address);\n    const summary = await campaign.methods.getSummary().call();\n\n    return {\n      campaignAddress: props.query.address,\n      minContribution: summary[0],\n      campaignBalance: summary[1],\n      spendRequestsCount: summary[2],\n      approversCount: summary[3],\n      managerAddress: summary[4]\n    };\n  }\n\n  renderCards() {\n    const { minContribution, campaignBalance, spendRequestsCount, approversCount, managerAddress } = this.props;\n    console.log('in detail: this.props.campaignAddress');\n    console.log(this.props.campaignAddress);\n    const items = [\n      {\n        header: managerAddress,\n        meta: 'Address of manager',\n        description: 'The creator of the campaign. Creates requests to withdraw money',\n        style: { overflowWrap: 'break-word' }\n      },\n      {\n        header: minContribution,\n        meta: 'Minimum Contribution (in wei)',\n        description: 'This campaign requires at least this amount from each contributor',\n        //style: { overflowWrap: 'break-word' }\n      },\n      {\n        header: spendRequestsCount,\n        meta: 'Spend Request Count',\n        description: 'The number of spend requests created for this campaign',\n        //style: { overflowWrap: 'break-word' }\n      },\n      {\n        header: approversCount,\n        meta: 'Approver Count',\n        description: 'The number of eligable approvers for this campaign',\n        //style: { overflowWrap: 'break-word' }\n      },\n      {\n        header: web3.utils.fromWei(campaignBalance, 'ether'),\n        meta: 'Campaign Balance (in ether)',\n        description: 'The current funds available on this contract for spend requests',\n        //style: { overflowWrap: 'break-word' }\n      },\n    ];\n\n    // https://react.semantic-ui.com/views/card#card-example-group-props\n    return <Card.Group items={items} />;\n  }\n\n  // https://react.semantic-ui.com/collections/grid#grid-example-column-width\n  render() {\n    return (\n      <Layout>\n        <h3>Campaign Details</h3>\n\n        <Grid>\n          <Grid.Row>\n            <Grid.Column width={10}>\n              {this.renderCards()}\n\n            </Grid.Column>\n            <Grid.Column width={6}>\n              <ContributeForm campaignAddress={this.props.campaignAddress}></ContributeForm>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column>\n              <Link route={`/campaigns/${this.props.campaignAddress}/requests`} >\n                <a>\n                  <Button primary>View Requests</Button>\n                </a>\n              </Link>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n\n      </Layout>\n    )\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./pages/campaigns/detail.js"],"sourceRoot":""}